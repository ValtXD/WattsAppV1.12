# Generated by Django 5.2 on 2025-05-15 18:43

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ambiente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Bandeira',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cor', models.CharField(choices=[('verde', 'Verde'), ('amarela', 'Amarela'), ('vermelha1', 'Vermelha - Patamar 1'), ('vermelha2', 'Vermelha - Patamar 2')], max_length=10, unique=True)),
                ('valor_adicional', models.DecimalField(decimal_places=5, max_digits=6)),
                ('descricao', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ConjuntoDados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('CONTADOR', 'Contador'), ('APARELHO', 'Aparelho')], max_length=10)),
                ('data_criacao', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('sigla', models.CharField(max_length=2, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RegistroContador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_registro', models.DateTimeField(default=django.utils.timezone.now)),
                ('consumo_kwh', models.FloatField()),
                ('total_pagar', models.FloatField()),
                ('estado', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Registro do Contador',
                'verbose_name_plural': 'Registros do Contador',
            },
        ),
        migrations.CreateModel(
            name='TarifaSocial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faixa_consumo', models.CharField(max_length=50)),
                ('desconto_percentual', models.DecimalField(decimal_places=2, max_digits=4)),
                ('descricao', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='DadosAparelho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('potencia', models.FloatField()),
                ('horas_uso', models.FloatField()),
                ('consumo_diario', models.FloatField()),
                ('data_registro', models.DateTimeField(auto_now_add=True)),
                ('conjunto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aparelhos', to='core.conjuntodados')),
            ],
        ),
        migrations.CreateModel(
            name='DadosContador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo', models.CharField(max_length=100)),
                ('data_medicao', models.DateField()),
                ('leitura_inicial', models.FloatField()),
                ('leitura_final', models.FloatField()),
                ('consumo_diario', models.FloatField()),
                ('consumo_acumulado', models.FloatField()),
                ('data_registro', models.DateTimeField(auto_now_add=True)),
                ('conjunto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contadores', to='core.conjuntodados')),
            ],
        ),
        migrations.CreateModel(
            name='Aparelho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('potencia_watts', models.FloatField()),
                ('tempo_uso_diario_horas', models.FloatField()),
                ('quantidade', models.IntegerField()),
                ('data_cadastro', models.DateField(default=django.utils.timezone.now)),
                ('ambiente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ambiente')),
                ('bandeira', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.bandeira')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.estado')),
            ],
        ),
        migrations.CreateModel(
            name='Tarifa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_kwh', models.DecimalField(decimal_places=5, max_digits=6)),
                ('atualizado_em', models.DateField(auto_now=True)),
                ('estado', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.estado')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricoConsumo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('consumo_kwh', models.FloatField()),
                ('custo_normal', models.FloatField()),
                ('custo_social', models.FloatField()),
                ('ambiente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ambiente')),
            ],
            options={
                'ordering': ['-data'],
                'unique_together': {('data', 'ambiente')},
            },
        ),
    ]
